# Generated by Django 3.0.8 on 2021-08-11 17:08

import backend_test.menus.models.menus
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time when object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time of last object modification.', verbose_name='modified at')),
                ('is_deleted', models.BooleanField(default=False, editable=False, help_text='Indicator to know if a object was deleted or not', verbose_name='soft deleted status')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'meal',
                'verbose_name_plural': 'meals',
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time when object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time of last object modification.', verbose_name='modified at')),
                ('is_deleted', models.BooleanField(default=False, editable=False, help_text='Indicator to know if a object was deleted or not', verbose_name='soft deleted status')),
                ('uuid', models.UUIDField(default=backend_test.menus.models.menus.generate_unique_uuid, editable=False, unique=True)),
                ('date', models.DateField(error_messages={'unique': 'A menu with that date already exists.'}, unique=True, validators=[django.core.validators.MinValueValidator(limit_value=django.utils.timezone.localdate)], verbose_name='date')),
            ],
            options={
                'verbose_name': 'menu',
                'verbose_name_plural': 'menus',
                'ordering': ['-created', '-modified'],
                'permissions': [('send_slack_reminder', 'Send slack reminder')],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time when object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time of last object modification.', verbose_name='modified at')),
                ('option', models.PositiveSmallIntegerField(default=32767, help_text='Option number in menu (useful for ordering).', verbose_name='option')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='menu_options', related_query_name='menu_option', to='menus.Meal', verbose_name='meal')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='menu_options', related_query_name='menu_option', to='menus.Menu', verbose_name='menu')),
            ],
            options={
                'verbose_name': 'menu option',
                'verbose_name_plural': 'menu options',
                'db_table': 'menus_menu_option',
                'ordering': ['option', '-created'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='menuoption',
            constraint=models.UniqueConstraint(fields=('menu', 'meal'), name='menu_option_menu_meal_unique'),
        ),
    ]
